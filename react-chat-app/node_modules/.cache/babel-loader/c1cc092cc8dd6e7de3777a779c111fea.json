{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ReoLLee\\\\Desktop\\\\Hi5\\\\Hi6\\\\Hi6\\\\react-chat-app\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport io from \"socket.io-client\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nlet socket;\n\nconst Dashboard = () => {\n  _s();\n\n  const [statistics, setStatistics] = useState({\n    total_users: 0,\n    total_rooms: 0,\n    total_messages: 0\n  });\n  const ENDPOINT = \"http://localhost:5000\";\n  var data = {\n    datasets: [{\n      label: 'Daily Messages',\n      backgroundColor: '#00a884',\n      borderColor: '#00a884',\n      data: statistics.daily_messages\n    }]\n  };\n  useEffect(() => {\n    socket = io(ENDPOINT); // save statistics to state machine\n\n    socket.on(\"statistics\", _ref => {\n      let {\n        statistics\n      } = _ref;\n      setStatistics(statistics);\n    }); // fetch statistics at startup\n\n    socket.emit(\"statistics\"); // fetch statistics once per minute (debug: once per second)\n\n    const interval = setInterval(() => {\n      socket.emit(\"statistics\");\n    }, 1 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-heading\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small-container total-users-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"user-icon\",\n          src: process.env.PUBLIC_URL + \"/icon-user.svg\",\n          alt: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-users-text\",\n          children: \"Total Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-users-count\",\n          children: statistics.total_users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small-container total-rooms-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"room-icon\",\n          src: process.env.PUBLIC_URL + \"/icon-room.svg\",\n          alt: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-rooms-text\",\n          children: \"Total Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-rooms-count\",\n          children: statistics.total_rooms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small-container total-messages-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"message-icon\",\n          src: process.env.PUBLIC_URL + \"/icon-message.svg\",\n          alt: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-messages-text\",\n          children: \"Total Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-messages-count\",\n          children: statistics.total_messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-messages-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"daily-messages-text\",\n          children: \"Daily Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chartjs-container\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Dashboard, \"+ptLh7Ui8pcOjTyDR+iTRwWkUN4=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/ReoLLee/Desktop/Hi5/Hi6/Hi6/react-chat-app/src/components/Dashboard.js"],"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","io","register","socket","Dashboard","statistics","setStatistics","total_users","total_rooms","total_messages","ENDPOINT","data","datasets","label","backgroundColor","borderColor","daily_messages","on","emit","interval","setInterval","clearInterval","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport io from \"socket.io-client\";\r\nimport './Dashboard.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nlet socket;\r\n\r\nconst Dashboard = () => {\r\n  const [statistics, setStatistics] = useState({total_users: 0, total_rooms: 0, total_messages: 0});\r\n\r\n  const ENDPOINT = \"http://localhost:5000\";\r\n\r\n  var data = {\r\n    datasets: [\r\n      {\r\n        label: 'Daily Messages',\r\n        backgroundColor: '#00a884',\r\n        borderColor: '#00a884',\r\n        data: statistics.daily_messages\r\n      }\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n\r\n    // save statistics to state machine\r\n    socket.on(\"statistics\", ({statistics}) => {\r\n      setStatistics(statistics);\r\n    });\r\n\r\n    // fetch statistics at startup\r\n    socket.emit(\"statistics\");\r\n\r\n    // fetch statistics once per minute (debug: once per second)\r\n    const interval = setInterval(() => {\r\n      socket.emit(\"statistics\");\r\n    }, 1*1000);\r\n    return () => clearInterval(interval);\r\n\r\n  }, []);\r\n  \r\n  return (\r\n      <div className=\"wrapper-container\">\r\n        <h1 className=\"dashboard-heading\">Dashboard</h1>\r\n        <div className=\"statistics-container\">\r\n          <div className=\"small-container total-users-container\">\r\n            <img className=\"user-icon\" src={process.env.PUBLIC_URL + \"/icon-user.svg\"} alt=\" \"/> \r\n            <div className=\"total-users-text\">Total Users</div>\r\n            <div className=\"total-users-count\">{statistics.total_users}</div>\r\n          </div>\r\n          <div className=\"small-container total-rooms-container\">\r\n            <img className=\"room-icon\" src={process.env.PUBLIC_URL + \"/icon-room.svg\"} alt=\" \"/>\r\n            <div className=\"total-rooms-text\">Total Rooms</div>\r\n            <div className=\"total-rooms-count\">{statistics.total_rooms}</div>\r\n          </div>\r\n          <div className=\"small-container total-messages-container\">\r\n            <img className=\"message-icon\" src={process.env.PUBLIC_URL + \"/icon-message.svg\"} alt=\" \"/>\r\n            <div className=\"total-messages-text\">Total Messages</div>\r\n            <div className=\"total-messages-count\">{statistics.total_messages}</div>\r\n          </div>\r\n          <div className=\"daily-messages-container\">\r\n            <div className=\"daily-messages-text\">Daily Messages</div>\r\n            <div className=\"chartjs-container\">\r\n              <Bar data={data} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}