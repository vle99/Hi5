{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mayer Samuel\\\\Desktop\\\\WebEng_Hi6_New\\\\Hi6\\\\react-chat-app\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport ReactDOM from 'react-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = _ref => {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [pokerState, setPokerState] = useState(0);\n  const ENDPOINT = \"http://localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    }); // socket.on(\"roomData\", ({ users }) => {\n    //   console.log(users);\n    //   setUsers(users);\n    // });\n  }, []);\n  useEffect(() => {\n    socket.on(\"planningPoker\", message => {\n      setPokerState(1);\n      console.log(\"State of PlanningPoker: \" + pokerState);\n    }); // socket.on(\"roomData\", ({ users }) => {\n    //   console.log(users);\n    //   setUsers(users);\n    // });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", {\n        message\n      });\n      setMessage(\"\");\n    } else {\n      console.log(\"info\");\n      alert(\"empty input\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personal_info\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hi5 \", pokerState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_info\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [messages.map((val, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMessage\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: val.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), val.text]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pokerState && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: \"setPokerState(0)\",\n          children: \"TestButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"QQ3DO2YQ44wO7XkJFQvwig+opRE=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Mayer Samuel/Desktop/WebEng_Hi6_New/Hi6/react-chat-app/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","ReactDOM","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","message","setMessage","pokerState","setPokerState","ENDPOINT","parse","search","emit","error","alert","on","console","log","handleSubmit","e","preventDefault","map","val","i","user","text","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport ReactDOM from 'react-dom';\r\nimport './Chat.css'\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [pokerState, setPokerState] = useState(0);\r\n\r\n  const ENDPOINT = \"http://localhost:5000\";\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n    socket = io(ENDPOINT);\r\n    setRoom(room);\r\n    setName(name);\r\n\r\n    socket.emit(\"join\", { name, room }, (error) => {\r\n      if (error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [location.search]);\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages((messages) => [...messages, message]);\r\n    });\r\n    // socket.on(\"roomData\", ({ users }) => {\r\n    //   console.log(users);\r\n    //   setUsers(users);\r\n    // });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"planningPoker\", (message) => {\r\n      setPokerState(1);\r\n\r\n      console.log(\"State of PlanningPoker: \" + pokerState);\r\n    });\r\n    // socket.on(\"roomData\", ({ users }) => {\r\n    //   console.log(users);\r\n    //   setUsers(users);\r\n    // });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", { message });\r\n      setMessage(\"\");\r\n    } \r\n    else {\r\n      console.log(\"info\")\r\n      alert(\"empty input\");\r\n    }\r\n  }; \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"personal_info\">\r\n        <h1>Hi5 {pokerState}</h1>\r\n      </div>\r\n      <div className=\"contact_info\">\r\n        <h1>{name}</h1> \r\n      </div>\r\n      <div className=\"chat\">\r\n      {messages.map((val, i) => {\r\n        return (\r\n          <div key={i} className=\"chatMessage\">\r\n            <b>{val.user}</b>\r\n            <br />\r\n            {val.text}\r\n          </div>\r\n        );\r\n      })}\r\n      <div>\r\n        {pokerState && (\r\n          <button onClick=\"setPokerState(0)\">TestButton</button>\r\n        )}\r\n      </div>\r\n      </div>\r\n      <div className=\"contact_list\">\r\n      </div>\r\n      <div className=\"message\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n          />\r\n          <input type=\"submit\"/>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}