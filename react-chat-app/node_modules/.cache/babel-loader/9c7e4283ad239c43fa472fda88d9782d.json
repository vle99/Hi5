{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ReoLLee\\\\Desktop\\\\Hi5\\\\Hi5_new\\\\ChatTutorial\\\\react-chat-app\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const ENDPOINT = \"http://localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    }); // socket.on(\"roomData\", ({ users }) => {\n    //   console.log(users);\n    //   setUsers(users);\n    // });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", {\n        message\n      });\n      setMessage(\"\");\n    } else alert(\"empty input\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personal_info\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hi5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_info\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: messages.map((val, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [val.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: val.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"BZcukgNkSGj8AnV2NJ8OrHFqngQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/ReoLLee/Desktop/Hi5/Hi5_new/ChatTutorial/react-chat-app/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","message","setMessage","ENDPOINT","parse","search","emit","error","alert","on","handleSubmit","e","preventDefault","map","val","i","text","user","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport './Home.css'\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const ENDPOINT = \"http://localhost:5000\";\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n    socket = io(ENDPOINT);\r\n    setRoom(room);\r\n    setName(name);\r\n\r\n    socket.emit(\"join\", { name, room }, (error) => {\r\n      if (error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [location.search]);\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages((messages) => [...messages, message]);\r\n    });\r\n    // socket.on(\"roomData\", ({ users }) => {\r\n    //   console.log(users);\r\n    //   setUsers(users);\r\n    // });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", { message });\r\n      setMessage(\"\");\r\n    } else alert(\"empty input\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"personal_info\">\r\n        <h1>Hi5</h1>\r\n      </div>\r\n      <div className=\"contact_info\">\r\n        <h1>{name}</h1> \r\n      </div>\r\n      <div className=\"chat\">\r\n      {messages.map((val, i) => {\r\n        return (\r\n          <div key={i}>\r\n            {val.text}\r\n            <br />\r\n            <b>{val.user}</b>\r\n          </div>\r\n        );\r\n      })}\r\n      </div>\r\n      <div className=\"contact_list\">\r\n      </div>\r\n      <div className=\"message\">\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n          />\r\n          <input type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}